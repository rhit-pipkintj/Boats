package project;
import javax.swing.*;

import java.awt.*;

import java.awt.event.ActionEvent;

import java.awt.event.ActionListener;

import java.util.Random;

 

public class Upgrades {

 

    private boolean isGamePaused = false;

    private JFrame frame;

    private JPanel upgradePanel;

    private Player player;

 

    public Upgrades(Player player) {

        this.player = player;

        createUpgradeUI();

    }

 

    // Simulates the player reaching max XP

    public void onPlayerReachMaxXP() {

        pauseGame();

        showUpgradeOptions();

    }

 

    private void pauseGame() {

        isGamePaused = true;

        System.out.println("Game paused.");

        // Add game logic to stop timers or movement updates

    }

 

    private void resumeGame() {

        isGamePaused = false;

        System.out.println("Game resumed.");

        // Resume game logic here

    }

 

    private void createUpgradeUI() {

        frame = new JFrame("Choose Your Upgrade");

        frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

        frame.setSize(400, 200);

        frame.setLocationRelativeTo(null);

 

        upgradePanel = new JPanel();

        upgradePanel.setLayout(new GridLayout(1, 3, 10, 10));

        frame.add(upgradePanel);

    }

 

    private void showUpgradeOptions() {

        upgradePanel.removeAll();

        String[] options = generateRandomUpgrades();

 

        for (String upgrade : options) {

            JButton button = new JButton(upgrade);

            button.addActionListener(new ActionListener() {

                @Override

                public void actionPerformed(ActionEvent e) {

                    applyUpgrade(upgrade);

                    frame.setVisible(false);

                    resumeGame();

                }

            });

            upgradePanel.add(button);

        }

 

        frame.setVisible(true);

    }

 

    private void applyUpgrade(String upgrade) {

        System.out.println("Upgrade chosen: " + upgrade);

        player.addUpgrade(upgrade);

    }

 

    private String[] generateRandomUpgrades() {

        String[] possibleUpgrades = {"Faster Attack", "Extra Health", "Shield Boost", "Speed Boost", "Double XP"};

        Random rand = new Random();

        String[] selected = new String[3];

        for (int i = 0; i < 3; i++) {

            selected[i] = possibleUpgrades[rand.nextInt(possibleUpgrades.length)];

        }

        return selected;

    }

 

    // Dummy player class for demo purposes

    public static class Player {

        public void addUpgrade(String upgrade) {

            System.out.println("Player received upgrade: " + upgrade);

        }

    }

 

    // Simulated game loop

    public static void main(String[] args) {

        Player player = new Player();

        Upgrades upgradeSystem = new Upgrades(player);

 

        // Simulate reaching max XP

        upgradeSystem.onPlayerReachMaxXP();

    }

}
